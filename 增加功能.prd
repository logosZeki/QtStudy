# SVG导出与导入功能需求说明文档

## 1. 功能概述

本文档描述在流程图编辑器中实现SVG格式的导出与导入功能，使用户能够将流程图保存为SVG矢量图形格式，并能够重新导入以进行展示和编辑。

## 2. 功能需求

### 2.1 导出为SVG功能

#### 2.1.1 基本功能
- 在导出工具栏中添加"导出为SVG"按钮（exportAsSvgButton）
- 点击按钮时，弹出文件保存对话框，让用户选择保存位置和文件名
- 导出的SVG文件应包含流程图的完整视图
- 导出完成后显示成功或失败的提示信息
- 导出绘图区比例尺（m_scale）为1.0时的模样

#### 2.1.2 保留参数要求
- 保留页面尺寸参数（m_drawingAreaSize）
- 保留所有图形元素的位置和大小参数
- 保留所有连接线的位置、大小和样式参数
- 保留所有文本内容及其样式（字体、颜色、大小等）
- 保留背景颜色和其他视觉参数

### 2.2 导入SVG功能

#### 2.2.1 基本功能
- 在导出工具栏中添加"从SVG导入"按钮（importAsSvgButton）
- 点击按钮时，弹出文件选择对话框，让用户选择要导入的SVG文件
- 导入的SVG文件应正确显示在绘图区域中
- 导入完成后显示成功或失败的提示信息

#### 2.2.2 导入要求
- 正确解析并还原之前导出的SVG文件中的所有图形元素
- 还原所有图形元素的位置、大小、样式和文本内容
- 还原所有连接线及其属性
- 导入后的m_scale强制为1.0
- 导入后的图形应支持二次编辑，包括位置调整、大小调整、文本修改等

## 3. 技术实现要点

### 3.1 SVG导出实现
- 参考现有的PNG导出功能（exportToPng方法），创建新的exportToSvg方法
- 使用Qt的SVG相关类（如QSvgGenerator）生成SVG文件
- 在SVG文件中以XML属性或元数据的形式保存必要的参数
- 保存所有图形元素和连接线的详细属性

### 3.2 SVG导入实现
- 创建新的importFromSvg方法
- 使用Qt的SVG解析类读取SVG文件
- 从SVG文件中还原所有图形元素、连接线及其属性
- 从SVG文件的元数据中读取并应用绘图区域参数

## 4. 用户界面要求

### 4.1 导出SVG按钮
- 按钮文本：导出为SVG
- 位置：放置在导出工具栏中，紧邻现有的"导出为PNG"按钮

### 4.2 导入SVG按钮
- 按钮文本：从SVG导入
- 位置：放置在导出工具栏中，位于导出按钮之后

### 4.3 文件对话框
- 导出时默认文件名：FlowChart_当前日期时间.svg
- 导入时默认筛选器：SVG文件 (*.svg)

## 5. 错误处理

### 5.1 导出错误处理
- 文件路径无效或无写入权限时，显示错误提示
- 导出过程中发生异常时，显示详细错误信息

### 5.2 导入错误处理
- 文件格式无效或不是由本应用导出的SVG时，显示兼容性错误提示
- 导入过程中发生异常时，显示详细错误信息
- 对无法识别的SVG元素提供合理的默认处理方式

## 6. 测试要点

### 6.1 功能测试
- 验证各种复杂流程图的导出与导入
- 验证包含不同图形元素和连接线的流程图导出与导入
- 验证包含特殊字符和格式的文本导出与导入

### 6.2 兼容性测试
- 验证在不同操作系统和Qt版本下的兼容性
- 验证与其他SVG编辑工具的基本兼容性

## 7. 性能要求
- 导出和导入操作应在合理的时间内完成（小于5秒，对于一般复杂度的流程图）
- 导出的SVG文件大小应保持在合理范围内
